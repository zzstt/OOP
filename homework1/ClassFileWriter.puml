@startuml
class javassist.bytecode.ClassFileWriter {
- ByteStream output
- ConstPoolWriter constPool
- FieldWriter fields
- MethodWriter methods
~ int thisClass
+ <<Create>> ClassFileWriter(int,int)
+ ConstPoolWriter getConstPool()
+ FieldWriter getFieldWriter()
+ MethodWriter getMethodWriter()
+ byte[] end(int,int,int,int[],AttributeWriter)
+ void end(DataOutputStream,int,int,int,int[],AttributeWriter)
~ {static} void writeAttribute(ByteStream,AttributeWriter,int)
}


interface javassist.bytecode.ClassFileWriter$AttributeWriter {
+ int size()
+ void write(DataOutputStream)
}

class javassist.bytecode.ClassFileWriter$FieldWriter {
# ByteStream output
# ConstPoolWriter constPool
- int fieldCount
~ <<Create>> FieldWriter(ConstPoolWriter)
+ void add(int,String,String,AttributeWriter)
+ void add(int,int,int,AttributeWriter)
~ int size()
~ int dataSize()
~ void write(OutputStream)
}


class javassist.bytecode.ClassFileWriter$MethodWriter {
# ByteStream output
# ConstPoolWriter constPool
- int methodCount
# int codeIndex
# int throwsIndex
# int stackIndex
- int startPos
- boolean isAbstract
- int catchPos
- int catchCount
~ <<Create>> MethodWriter(ConstPoolWriter)
+ void begin(int,String,String,String[],AttributeWriter)
+ void begin(int,int,int,int[],AttributeWriter)
- void writeThrows(int[])
+ void add(int)
+ void add16(int)
+ void add32(int)
+ void addInvoke(int,String,String,String)
+ void codeEnd(int,int)
+ void addCatch(int,int,int,int)
+ void end(StackMapTable.Writer,AttributeWriter)
+ int size()
~ int numOfMethods()
~ int dataSize()
~ void write(OutputStream)
}


class javassist.bytecode.ClassFileWriter$ConstPoolWriter {
~ ByteStream output
# int startPos
# int num
~ <<Create>> ConstPoolWriter(ByteStream)
+ int[] addClassInfo(String[])
+ int addClassInfo(String)
+ int addClassInfo(int)
+ int addNameAndTypeInfo(String,String)
+ int addNameAndTypeInfo(int,int)
+ int addFieldrefInfo(int,int)
+ int addMethodrefInfo(int,int)
+ int addInterfaceMethodrefInfo(int,int)
+ int addMethodHandleInfo(int,int)
+ int addMethodTypeInfo(int)
+ int addInvokeDynamicInfo(int,int)
+ int addDynamicInfo(int,int)
+ int addStringInfo(String)
+ int addIntegerInfo(int)
+ int addFloatInfo(float)
+ int addLongInfo(long)
+ int addDoubleInfo(double)
+ int addUtf8Info(String)
~ void end()
}




javassist.bytecode.ClassFileWriter +.. javassist.bytecode.ClassFileWriter$AttributeWriter
javassist.bytecode.ClassFileWriter +.. javassist.bytecode.ClassFileWriter$FieldWriter
javassist.bytecode.ClassFileWriter +.. javassist.bytecode.ClassFileWriter$MethodWriter
javassist.bytecode.ClassFileWriter +.. javassist.bytecode.ClassFileWriter$ConstPoolWriter
@enduml